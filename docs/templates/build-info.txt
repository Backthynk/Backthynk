Backthynk v{{VERSION}}

Build Information:
==================
Version:        {{VERSION}}
Commit:         {{COMMIT_SHA}}
Branch/Tag:     {{REF_NAME}}
Build Date:     {{BUILD_DATE}}
Built by:       {{BUILDER}}

Platforms:
==========
- Linux AMD64 (x86_64)
- Linux ARM64 (aarch64)
- macOS AMD64 (Intel x86_64)
- macOS ARM64 (Apple Silicon M1/M2/M3)
- Windows AMD64 (x86_64)

Build Process:
==============
This build uses modern web bundling and optimization:

1. CSS Pipeline:
   - CSSO for aggressive CSS minification
   - Tree-shaking to remove unused styles
   - PostCSS for vendor prefixing and optimizations

2. JavaScript Pipeline:
   - tdewolff/minify for JS minification
   - Tree-shaking to eliminate dead code
   - Modern ES module bundling

3. HTML Optimization:
   - tdewolff/minify for HTML compression
   - Template inlining and optimization

4. Asset Compression:
   - Brotli compression (best compression, modern browsers)
   - Gzip fallback (universal compatibility)
   - Pre-compressed assets served at runtime

5. Binary Packaging:
   - Go embed for zero-dependency production binaries
   - Cross-platform builds (Linux, macOS, Windows)
   - Static linking for maximum portability

Build Verification:
===================
You can verify this build is authentic by reproducing it locally.

Repository: {{REPO_URL}}
Commit:     {{REPO_URL}}/commit/{{COMMIT_SHA}}

Step 1: Clone and checkout the exact commit
  git clone {{REPO_URL}}
  cd backthynk
  git checkout {{COMMIT_SHA}}

Step 2: Build using Docker (ensures identical environment)
  make build-with-docker

Step 3: Verify SHA256 checksums match

On Linux:
  cd releases/linux-amd64
  sha256sum backthynk-v{{VERSION}}
  # Compare output with SHA256SUMS.txt from the release

On macOS:
  cd releases/macos-arm64  # or macos-amd64 for Intel Macs
  shasum -a 256 backthynk-v{{VERSION}}
  # Compare output with SHA256SUMS.txt from the release

On Windows (PowerShell):
  cd releases\windows-amd64
  Get-FileHash backthynk-v{{VERSION}}.exe -Algorithm SHA256
  # Compare output with SHA256SUMS.txt from the release

If the checksums match, the binary is authentic and unmodified.
